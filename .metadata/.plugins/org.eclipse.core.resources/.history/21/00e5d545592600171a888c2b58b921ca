package net.vijay.collbackend.config;
import java.util.Properties;

import javax.sql.DataSource;

import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.datasource.DriverManagerDataSource;
import org.springframework.orm.hibernate5.HibernateTransactionManager;
import org.springframework.orm.hibernate5.LocalSessionFactoryBuilder;
import org.springframework.transaction.annotation.EnableTransactionManagement;

import net.vijay.collbackend.dao.UserDAO;
import net.vijay.collbackend.dao.UserDAOImpl;
import net.vijay.collbackend.model.User;



@ComponentScan(basePackages="{net.vijay.collbackend}")
@Configuration
@EnableTransactionManagement
public class ApplicationContextConfig {
		
	@Bean(name = "dataSource")
	public DataSource  getOracleDataSource()
	{
		System.out.println("Data Source Creation");
		DriverManagerDataSource  dataSource = new DriverManagerDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:XE");
		dataSource.setUsername("myDatabase");
		dataSource.setPassword("myDatabase");
		
		return dataSource;
		
	}
	
	private Properties getHibernateProperties()
	{
		Properties connectionProperties  =  new Properties();
		connectionProperties.setProperty("hibernate.shoq_sql", "true");
		connectionProperties.setProperty("hibernate.dialect", "org.hibernate.dialect.Oracle10gDialect");
		connectionProperties.setProperty("hibernate.format_sql", "true");
		connectionProperties.setProperty("hibernate.hbm2ddl.auto", "update");
		connectionProperties.setProperty("hibernate.jdbc.use_get_generated_keys", "true");
		
		return connectionProperties;
		
	}
	
	
	@Autowired
	@Bean(name = "sessionFactory")
	public SessionFactory getSessionFactory(DataSource dataSource)
	{
		System.out.println("Session Factory Creation");
		LocalSessionFactoryBuilder sessionBuilder =  new LocalSessionFactoryBuilder(dataSource);
		sessionBuilder.addProperties(getHibernateProperties());
		sessionBuilder.addAnnotatedClass(User.class);
		System.out.println("Before return stmt");
		return sessionBuilder.buildSessionFactory();
	}
	
	@Autowired
	@Bean(name = "transactionManager")
	public HibernateTransactionManager getTransactionManager(SessionFactory sessionFactory) {
		HibernateTransactionManager transactionManager = new HibernateTransactionManager(sessionFactory); 
		
																							// same
																											// name
																											// as
																											// bean
																											// name
																											// of
																											// session
																											// factory
		return transactionManager;
	}

	@Autowired
	@Bean(name = "user")
	public User getUser() {
		return new User();
	}

	@Autowired
	@Bean(name = "userDAO")
	public UserDAO getUserDAO(SessionFactory sessionFactory) {
		return new UserDAOImpl(sessionFactory);
	}



}

